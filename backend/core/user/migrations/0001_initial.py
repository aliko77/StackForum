# Generated by Django 4.2.2 on 2023-07-13 15:11

import core.user.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('username', models.CharField(max_length=16, null=True, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserLoginRecords',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('browser', models.CharField(max_length=100, null=True)),
                ('os', models.CharField(max_length=100, null=True)),
                ('device', models.CharField(max_length=100, null=True)),
                ('ip_address', models.GenericIPAddressField(null=True)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_login_records',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dob', models.DateField(blank=True, null=True)),
                ('dob_privacy', models.CharField(blank=True, choices=[('none', 'Hiçbir Şeyi Gösterme'), ('age', 'Sadece Yaş'), ('month_day', 'Ay ve Gün'), ('show', 'Her Şeyi Göster')], default='age', max_length=20)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('about', models.TextField(blank=True, max_length=500, null=True)),
                ('profession', models.CharField(blank=True, max_length=50, null=True)),
                ('hobbies', models.TextField(blank=True, max_length=500, null=True)),
                ('twitter_url', models.URLField(blank=True, null=True)),
                ('github_url', models.URLField(blank=True, null=True)),
                ('email_secondary', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('status', models.CharField(blank=True, choices=[('ONLINE', 'Çevrimiçi'), ('OFFLINE', 'Çevrimdışı')], default='OFFLINE', max_length=20)),
                ('avatar', models.ImageField(blank=True, default='profile_pictures/default.jpg', null=True, upload_to=core.user.models.get_upload_path)),
                ('signature', models.CharField(blank=True, max_length=1024, null=True)),
                ('share_info', models.CharField(blank=True, choices=[('public', 'Herkes'), ('registered', 'Kayıtlı Üyeler')], default='public', max_length=20)),
                ('allow_friend_requests', models.BooleanField(blank=True, default=True)),
                ('allow_messages', models.CharField(blank=True, choices=[('public', 'Herkes'), ('registered', 'Kayıtlı Üyeler'), ('friends', 'Arkadaşlarım')], default='public', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_profile',
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('friendship_at', models.DateTimeField(auto_now_add=True)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friend_of', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_friend',
                'ordering': ['-friendship_at'],
                'unique_together': {('friend', 'user')},
            },
        ),
        migrations.CreateModel(
            name='BlockedUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_users', to=settings.AUTH_USER_MODEL)),
                ('blocked_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blocked_by', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_blockeduser',
                'ordering': ['-blocked_at'],
                'unique_together': {('blocked_by', 'blocked_user')},
            },
        ),
    ]
